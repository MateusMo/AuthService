version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: authservice-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: authservice
    volumes:
      - mongodb_data:/data/db
    networks:
      - auth-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  mongo-express:
    image: mongo-express:latest
    container_name: authservice-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - auth-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: authservice-rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - auth-network
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 10s
      timeout: 20s
      retries: 15
      start_period: 30s

  authservice:
    image: mateusmo/authservice:latest
    container_name: authservice-app
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: password123
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - auth-network
    
volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  auth-network:
    driver: bridge